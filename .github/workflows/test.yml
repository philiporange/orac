name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run quick unit tests
      run: pytest -m "unit and not slow" -n 2
      env:
        ORAC_LLM_PROVIDER: google
        GOOGLE_API_KEY: fake_test_key
    
    - name: Run all unit tests with coverage
      run: pytest -m unit --cov=orac --cov-report=term-missing -n 2
      env:
        ORAC_LLM_PROVIDER: google
        GOOGLE_API_KEY: fake_test_key
    
    - name: Run integration tests
      run: pytest -m integration -n 2
      env:
        ORAC_LLM_PROVIDER: google
        GOOGLE_API_KEY: fake_test_key
    
    - name: Run E2E tests (Python 3.11 only)
      if: matrix.python-version == '3.11'
      run: pytest -m e2e
      env:
        ORAC_LLM_PROVIDER: google
        GOOGLE_API_KEY: fake_test_key
    
    - name: Generate coverage report
      if: matrix.python-version == '3.11'
      run: |
        pytest -m unit --cov=orac --cov-report=html --cov-report=xml -n 2
      env:
        ORAC_LLM_PROVIDER: google
        GOOGLE_API_KEY: fake_test_key
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        fail_ci_if_error: false

  validation:
    runs-on: ubuntu-latest
    name: Validate test structure
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Validate test structure and markers
      run: |
        echo "Validating test structure and markers..."
        pytest --collect-only --quiet tests/
        echo "Test structure validation passed"
      env:
        ORAC_LLM_PROVIDER: google
        GOOGLE_API_KEY: fake_test_key